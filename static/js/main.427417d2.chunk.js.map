{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","ccy","base_ccy","buy","sale","currencyCode","setCurrencyCode","currency1Value","setCurrency1Value","course","setCourse","result","setResult","useEffect","axios","get","then","resp","data","className","defaultValue","onChange","e","currentTarget","value","disabled","map","currency","index","type","placeholder","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OA+DeA,EApDH,WAEV,MAAwCC,mBAA4B,CAAC,CAACC,IAAI,KAAMC,SAAS,KAAMC,IAAI,KAAMC,KAAK,QAA9G,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA4CN,mBAA0B,GAAtE,mBAAOO,EAAP,KAAuBC,EAAvB,KACA,EAA4BR,qBAA5B,mBAAOS,EAAP,KAAeC,EAAf,KACA,EAA4BV,qBAA5B,mBAAOW,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACRC,IAAMC,IAAI,oEAAoEC,MAC5E,SAACC,GACC,IAAMhB,EAAMgB,EAAKC,KACjBZ,EAAgBL,GAChBS,EAAUT,EAAI,GAAGE,UAGpB,IAEHU,qBAAU,WAERD,EADGL,GAAkBE,EACXF,EAAeE,EAEb,QAEX,CAACF,EAAgBE,IAMpB,OACE,sBAAKU,UAAU,UAAf,UACE,oBAAIA,UAAU,kBAAd,uGACA,qBAAKA,UAAU,GAAf,SACE,yBAAQA,UAAU,kCAAkCC,aAAc,UAAWC,SAAU,SAACC,GAAKZ,GAAWY,EAAEC,cAAcC,QAAxH,UAEA,wBAAQA,MAAM,UAAUC,UAAQ,EAAhC,mGACGpB,EAAaqB,KAAI,SAACC,EAAUC,GAAX,OAChBD,EAASxB,KAAO,wBAAoBqB,MAAOG,EAASxB,IAApC,SAA0CwB,EAAS1B,KAAtC2B,WAInC,sBAAKT,UAAU,OAAf,UACE,uBAAOU,KAAK,OAAOC,YAAa,8FAAoBX,UAAU,eAAeK,MAAOjB,GAAiC,GAAIc,SAjBvG,SAACC,GACvBd,GAAmBc,EAAEC,cAAcC,UAiB/B,yBAAQL,UAAU,2BAA2BM,UAAQ,EAArD,kFAAqEhB,KACrE,wBAAQU,UAAU,2BAA2BM,UAAQ,EAArD,SAAuDd,GAAUA,EAAS,2BAE5E,4BC3CSoB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.427417d2.chunk.js","sourcesContent":["import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './App.css';\n\ntype currencyCodeType = [\n  {ccy: string | null, \n  base_ccy: string | null, \n  buy: number | null, \n  sale: number | null}\n]\n\nconst App = () => {\n\n  const [currencyCode, setCurrencyCode] = useState <currencyCodeType>([{ccy:null, base_ccy:null, buy:null, sale:null}]);\n  const [currency1Value, setCurrency1Value] = useState <number | null> (1);\n  const [course, setCourse] = useState<number | null>()\n  const [result, setResult] = useState<number | null>()\n\n  useEffect(()=> {\n    axios.get(\"https://api.privatbank.ua/p24api/pubinfo?json&exchange&coursid=5\").then(\n      (resp) => {\n        const ccy = resp.data;\n        setCurrencyCode(ccy);\n        setCourse(ccy[0].buy);        \n      }\n    )\n  }, [])\n\n  useEffect(()=>{\n    if(currency1Value && course)\n    setResult(currency1Value*course)\n    else{\n      setResult(null)\n    }\n  }, [currency1Value, course])\n\n  const handlerCurrency = (e: React.ChangeEvent<HTMLInputElement>)=>{\n    setCurrency1Value(+e.currentTarget.value);\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <h1 className=\"p-3 text-center\">Конвертер валют UAN</h1>\n      <div className=\"\">\n        <select className=\"form-select form-select-lg mb-3\" defaultValue={'DEFAULT'} onChange={(e)=>{setCourse(+e.currentTarget.value)\n        }}>\n        <option value=\"DEFAULT\" disabled>Выберите валюту</option>\n          {currencyCode.map((currency, index)=>(\n            currency.buy && <option key={index} value={currency.buy}>{currency.ccy}</option>  \n          ))}\n        </select>\n      </div>\n      <div className=\"form\">\n        <input type=\"text\" placeholder={'Введиет значение'} className=\"form-control\" value={currency1Value ? currency1Value: ''} onChange={handlerCurrency}/>\n        <button className=\"btn btn-primary btn-text\" disabled>Текущий курс: {course}</button>\n        <button className=\"btn btn-primary btn-text\" disabled>{result && result + ' грн'}</button>\n      </div>\n      <div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}